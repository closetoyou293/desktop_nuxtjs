{"version":3,"sources":["../../../server/core/express_init.js"],"names":["Init","BuildAPI","MongoStore","session","config","App","use","bodyParser","json","limit","urlencoded","extended","level","threshold","helmet","frameguard","xssFilter","noSniff","ieNoOpen","hsts","maxAge","includeSubDomains","force","disable","database","secret","resave","saveUninitialized","unset","store","url","ttl","List","Server","Promise","res","rej","APIList","Array","isArray","Msg","build","api","false","length","forEach","e","name","path","nameCheck","_","find","o","dupe","push","Api","express","Router","req","next","Log","Show","true"],"mappings":"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","file":"express_init.js","sourcesContent":["import _ from 'lodash';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport helmet from 'helmet';\r\nimport bodyParser from 'body-parser';\r\nimport session from 'express-session'\r\nimport cookieParser from 'cookie-parser';\r\nimport connectMongo from 'connect-mongo';\r\nimport compression from 'compression';\r\n\r\nconst MongoStore = connectMongo(session);\r\n\r\nexport function Init(config){\r\n    let App = express();\r\n\r\n    App.use(cors());\r\n    App.use(bodyParser.json({limit: '50mb'}));\r\n    App.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\r\n    App.use(compression({ level: 9, threshold: 0 }));\r\n    \r\n    App.use(helmet.frameguard());\r\n    App.use(helmet.xssFilter());\r\n    App.use(helmet.noSniff());\r\n    App.use(helmet.ieNoOpen());\r\n    App.use(helmet.hsts({ maxAge: 15778476, includeSubDomains: true, force: true }));\r\n    App.disable('x-powered-by');\r\n\r\n    App.use(cookieParser());\r\n    if(config.database && config.secret){\r\n        App.use(session({\r\n            secret: config.secret,\r\n            resave: false,\r\n            saveUninitialized: true,\r\n            unset: 'destroy',\r\n            store: new MongoStore({\r\n                url: config.database,\r\n                ttl: 30 * 24 * 60 * 60 //30days\r\n            })\r\n        }));\r\n    }\r\n\r\n    return App;\r\n}\r\n\r\nexport function BuildAPI(List, Server){\r\n    return new Promise((res, rej) => {\r\n        let APIList = [];\r\n        if(Array.isArray(List) == false) return rej(Server.Msg.build.api.false);\r\n        if(List.length < 1) return res();\r\n\r\n        List.forEach(e => {\r\n            if(!e.name || !e.path) return rej(Server.Msg.build.api.false);\r\n\r\n            //Check route name\r\n            let nameCheck = _.find(APIList, (o) => { return o == e.name; });\r\n            if(nameCheck) return rej(Server.Msg.build.api.dupe);\r\n            APIList.push(e.name);\r\n\r\n            //Set Api\r\n            let Api = express.Router();\r\n            Server.App.use(`/api/${e.name}`, Api);\r\n\r\n            if(!e.use){\r\n                e.path(Api);\r\n            } else {\r\n                Api.use((req, res, next) => {\r\n                    e.use(req, res, next);\r\n                });\r\n                e.path(Api);\r\n            }\r\n\r\n            //Done\r\n            if(APIList.length == List.length){\r\n                Server.Log.Show(Server.Msg.build.api.true);\r\n                res();\r\n            }\r\n        }); \r\n    });\r\n}"]}