{"version":3,"sources":["../../../server/core/nuxt_init.js"],"names":["Init","configNuxt","require","path","resolve","dev","process","env","NODE_ENV","nuxt","Nuxt","Promise","res","rej","builder","Builder","build","then"],"mappings":";;;;;QAGgBA,I,GAAAA,I;;AAHhB;;;;AACA;;;;AAEO,SAASA,IAAT,GAAe;AAClB,UAAMC,aAAaC,QAAQC,eAAKC,OAAL,CAAa,kBAAb,CAAR,CAAnB;AACAH,eAAWI,GAAX,GAAiB,EAAEC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA3B,CAAjB;AACA,UAAMC,OAAO,IAAIC,UAAJ,CAAST,UAAT,CAAb;;AAEA,WAAO,IAAIU,OAAJ,CAAY,CAACC,GAAD,EAAKC,GAAL,KAAa;AAC5B,YAAIZ,WAAWI,GAAf,EAAoB;AAChB,kBAAMS,UAAU,IAAIC,aAAJ,CAAYN,IAAZ,CAAhB;AACAK,oBAAQE,KAAR,GACCC,IADD,CACM,MAAM;AACRL,oBAAIH,IAAJ;AACH,aAHD;AAIH,SAND,MAMO;AACHG,gBAAIH,IAAJ;AACH;AAEJ,KAXM,CAAP;AAYH","file":"nuxt_init.js","sourcesContent":["import path from 'path';\r\nimport { Nuxt, Builder } from 'nuxt';\r\n\r\nexport function Init(){\r\n    const configNuxt = require(path.resolve('./nuxt.config.js'));\r\n    configNuxt.dev = !(process.env.NODE_ENV === 'production');\r\n    const nuxt = new Nuxt(configNuxt);\r\n    \r\n    return new Promise((res,rej) => {\r\n        if (configNuxt.dev) {\r\n            const builder = new Builder(nuxt);\r\n            builder.build()\r\n            .then(() => {\r\n                res(nuxt);\r\n            });\r\n        } else {\r\n            res(nuxt);\r\n        }\r\n        \r\n    });\r\n}"]}